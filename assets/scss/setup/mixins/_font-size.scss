/// REM Sizing
/* 	
	Rem is similar to the em value, but instead of being relative to the parent 
	element itâ€™s relative to the font-size set in the <html>.
*/
@mixin font-size($sizeValue: 16) {
	font-size: ($sizeValue) + px;
	font-size: ($sizeValue / 10) + rem;
}
// REM Font Sizing, fixed version from CSSTricks
body{
	//font-size:62.5%;
}


///
/// Viewport sized typography with minimum and maximum values
///
/// @author Eduardo Boucas (@eduardoboucas)
///
/// @param {Number}   $responsive  - Viewport-based size
/// @param {Number}   $min         - Minimum font size (px)
/// @param {Number}   $max         - Maximum font size (px)
///                                  (optional)
/// @param {Number}   $fallback    - Fallback for viewport-
///                                  based units (optional)
///
/// @example scss - 5vw font size (with 50px fallback), 
///                 minumum of 35px and maximum of 150px
///  @include responsive-font(5vw, 35px, 150px, 50px);
///
@mixin responsive-font($responsive, $min, $max: false, $fallback: false) {
	$responsive-unitless: $responsive / ($responsive - $responsive + 1);
	$dimension: if(unit($responsive) == 'vh', 'height', 'width');
	$min-breakpoint: $min / $responsive-unitless * 100;
	
	@media (max-#{$dimension}: #{$min-breakpoint}) {
		font-size: $min;
	}
	
	@if $max {
		$max-breakpoint: $max / $responsive-unitless * 100;
		
		@media (min-#{$dimension}: #{$max-breakpoint}) {
			font-size: $max;
		}
	}
	
	@if $fallback {
		font-size: $fallback;
	}
	
	font-size: $responsive;
}